{"version":3,"file":"index.cjs.js","sources":["../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { storage } from 'firebase/app';\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport function fromTask(task: storage.UploadTask) {\n  return new Observable<storage.UploadTaskSnapshot>(subscriber => {\n    const progress = (snap: storage.UploadTaskSnapshot) =>\n      subscriber.next(snap);\n    const error = e => subscriber.error(e);\n    const complete = () => subscriber.complete();\n    task.on('state_changed', progress, error, complete);\n    return () => task.cancel();\n  });\n}\n\nexport function getDownloadURL(ref: storage.Reference) {\n  return from(ref.getDownloadURL());\n}\n\nexport function getMetadata(ref: storage.Reference) {\n  return from(ref.getMetadata());\n}\n\nexport function put(\n  ref: storage.Reference,\n  data: any,\n  metadata?: storage.UploadMetadata\n) {\n  return fromTask(ref.put(data, metadata));\n}\n\nexport function putString(\n  ref: storage.Reference,\n  data: string,\n  format?: storage.StringFormat,\n  metadata?: storage.UploadMetadata\n) {\n  return fromTask(ref.putString(data, format, metadata));\n}\n\nexport function percentage(task: storage.UploadTask) {\n  return fromTask(task).pipe(\n    map(s => ({\n      progress: (s.bytesTransferred / s.totalBytes) * 100,\n      snapshot: s\n    }))\n  );\n}\n"],"names":["Observable","from","map"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;AAkBA,SAGgB,QAAQ,CAAC,IAAwB;IAC/C,OAAO,IAAIA,eAAU,CAA6B,UAAA,UAAU;QAC1D,IAAM,QAAQ,GAAG,UAAC,IAAgC;YAChD,OAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;SAAA,CAAC;QACxB,IAAM,KAAK,GAAG,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,GAAA,CAAC;QACvC,IAAM,QAAQ,GAAG,cAAM,OAAA,UAAU,CAAC,QAAQ,EAAE,GAAA,CAAC;QAC7C,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACpD,OAAO,cAAM,OAAA,IAAI,CAAC,MAAM,EAAE,GAAA,CAAC;KAC5B,CAAC,CAAC;CACJ;AAED,SAAgB,cAAc,CAAC,GAAsB;IACnD,OAAOC,SAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;CACnC;AAED,SAAgB,WAAW,CAAC,GAAsB;IAChD,OAAOA,SAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;CAChC;AAED,SAAgB,GAAG,CACjB,GAAsB,EACtB,IAAS,EACT,QAAiC;IAEjC,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;CAC1C;AAED,SAAgB,SAAS,CACvB,GAAsB,EACtB,IAAY,EACZ,MAA6B,EAC7B,QAAiC;IAEjC,OAAO,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;CACxD;AAED,SAAgB,UAAU,CAAC,IAAwB;IACjD,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CACxBC,aAAG,CAAC,UAAA,CAAC,IAAI,QAAC;QACR,QAAQ,EAAE,CAAC,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,UAAU,IAAI,GAAG;QACnD,QAAQ,EAAE,CAAC;KACZ,IAAC,CAAC,CACJ,CAAC;CACH;;;;;;;;;"}